version: '3.8'

services:
  agent:
    image: portainer/agent:2.11.1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - ems_agent_network
    deploy:
      mode: global
      placement:
        constraints: [node.platform.os == linux]

  portainer:
    image: portainer/portainer-ce:2.11.1
    command: -H tcp://tasks.agent:9001 --tlsskipverify
    ports:
      - "9443:9443"
      - "9000:9000"
      - "8081:8000"
    volumes:
      - portainer_data:/data
    networks:
      - ems_agent_network
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]

  db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: ems
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - ems_agent_network
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1000M
      restart_policy:
        condition: on-failure

  # utilitar baza de date mysql
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    ports:
      - "8080:80"
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
    depends_on:
      - db
    networks:
      - ems_agent_network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 200M
      restart_policy:
        condition: on-failure

  # backend:
  #   image: backend-image:latest
  #   # command: python manage.py runserver 0.0.0.0:8000
  #   command: >
  #     sh -c "
  #     python manage.py migrate &&
  #     python manage.py runserver 0.0.0.0:8000
  #     "
  #   volumes:
  #     - ./backend:/app
  #   ports:
  #     - "8000:8000"
  #   depends_on:
  #     - db
  #   environment:
  #     - DB_HOST=db
  #     - DB_NAME=ems
  #     - DB_USER=root
  #     - DB_PASSWORD=root
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: '0.5'
  #         memory: 1000M
  #     restart_policy:
  #       condition: on-failure

  business_module:
    image: razvim23/business-module-image:latest
    command: python manage.py runserver 0.0.0.0:8002
    ports:
      - "8002:8002"
    volumes:
      - ./business_module:/app
    networks:
      - ems_agent_network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1000M
      restart_policy:
        condition: on-failure

  payments_module:
    image: razvim23/payments-module-image:latest
    command: >
      sh -c "
      python manage.py migrate &&
      python manage.py runserver 0.0.0.0:8003
      "
    ports:
      - "8003:8003"
    environment:
      - DB_HOST=db
      - DB_NAME=ems
      - DB_USER=root
      - DB_PASSWORD=root
    networks:
      - ems_agent_network
    volumes:
      - ./payments_module:/app
    depends_on:
      - db
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1000M
      restart_policy:
        condition: on-failure

  tasks_module:
    image: razvim23/tasks-module-image:latest
    ports:
      - "8004:8004"
    command: >
      sh -c "
      python manage.py migrate &&
      python manage.py runserver 0.0.0.0:8004
      "
    environment:
      - DB_HOST=db
      - DB_NAME=ems
      - DB_USER=root
      - DB_PASSWORD=root
    depends_on:
      - db
    networks:
      - ems_agent_network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1000M
      restart_policy:
        condition: on-failure

  teams_module:
    image: razvim23/teams-module-image:latest
    ports:
      - "8000:8000"
    environment:
      - DB_HOST=db
      - DB_NAME=ems
      - DB_USER=root
      - DB_PASSWORD=root
    command: >
      sh -c "
      python tasks_module/manage.py migrate &&
      python teams_module/manage.py runserver 0.0.0.0:8000
      "
    depends_on:
      - db
    networks:
      - ems_agent_network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1000M
      restart_policy:
        condition: on-failure

  frontend:
    image: razvim23/frontend-image:latest
    ports:
      - "4000:4000"
    environment:
      - PORT=4000
    depends_on:
      - db
    networks:
      - ems_agent_network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1100M
      restart_policy:
        condition: on-failure

  # kong:
  #   image: kong:latest
  #   volumes:
  #     - ./kong:/usr/local/kong/declarative
  #   environment:
  #     KONG_DATABASE: 'off'
  #     KONG_DECLARATIVE_CONFIG: /usr/local/kong/declarative/kong.yml
  #     KONG_PROXY_ACCESS_LOG: /dev/stdout
  #     KONG_ADMIN_ACCESS_LOG: /dev/stdout
  #     KONG_PROXY_ERROR_LOG: /dev/stderr
  #     KONG_ADMIN_ERROR_LOG: /dev/stderr
  #     KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
  #   ports:
  #     - "8001:8000"  # HTTP
  #     - "8443:8443"  # HTTPS
  #   networks:
  #     - ems_agent_network
  #   deploy:
  #     placement:
  #       constraints: [node.role == manager]  # RuleazÄƒ doar pe manager pentru a evita conflictele


networks:
  ems_agent_network:
    driver: overlay
    attachable: true


volumes:
  db_data:
  portainer_data:
